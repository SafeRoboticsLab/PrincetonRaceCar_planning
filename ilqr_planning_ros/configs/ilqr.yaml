####################################################
############### General Parameters #################
####################################################
num_dim_x: 5
num_dim_u: 2
n: 10 # horizon length
dt: 0.1 # time step

####################################################
###########Optimization Parameters #################
####################################################        

max_iter: 100 # maximum number of iterations
tol: 1.0e-3 # tolerance for the iLQR convergence

# line search parameters
# We assume line search parameter is a**np.arange(0, b, c)
line_search_a: 0.1 # line search parameter a
line_search_b: 5.0 # line search parameter b
line_search_c: 0.5 # line search parameter c

# regularization parameters
reg_min: 1.0e-6 # minimum regularization
reg_max: 1000 # maximum regularization
reg_init: 1.0
reg_scale_up: 10 # scale up factor for regularization
reg_scale_down: 0.5 # scale down factor for regularization

####################################################
########## Parameters for iLQR COST ################
####################################################

########        State Cost          ############

# Path Offset Cost
path_cost_type: 'huber' # 'quadratic' or 'huber'
path_weight: 5.0 # weight for the path deviation cost
path_huber_delta: 5.0 # huber loss delta for path deviation cost

# Velocity Cost
vel_cost_type: 'quadratic' # 'quadratic' or 'huber'
vel_weight: 0 # weight for the velocity cost
vel_huber_delta: 1. # huber loss delta for velocity cost

# Lateral Acceleration Cost
# We use ExpLinearCost for lateral acceleration cost
lat_accel_thres: 5.0 # threshold for lateral acceleration cost
lat_accel_a: 10.0 # parameter for lateral acceleration cost
lat_accel_b: 1.0 # parameter for ExpLinear Cost

# Progress Cost
progress_weight: 0.1 # weight for the progress cost

########        Control Cost          ############
ctrl_cost_type: 'quadratic' # 'quadratic' or 'huber'
ctrl_cost_accel_weight: 0.1
ctrl_cost_steer_weight: 0.1
ctrl_cost_accel_huber_delta: 1.0 # huber loss delta
ctrl_cost_steer_huber_delta: 1.0 # huber loss delta